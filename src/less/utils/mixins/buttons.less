/***********************************************
 Buttons mixins
***********************************************/

@import '../variables/index';

.reset-button() {
    margin: 0;
    padding: 0;
    border: 0;
    background: transparent;
    font: inherit;
    line-height: normal;
    cursor: pointer;

    &::-moz-focus-inner {
        padding: 0;
        border: 0;
    }
}

.button-color(@baseColor) {
    background-color: @baseColor;

    &:focus {
        background-color: @baseColor;
    }
    &:hover {
        background-color: darken(@baseColor, 10%);
    }
    &:active {
        background-color: darken(@baseColor, 20%);
    }
}

.button-base() {
    .button-disabled();
    display: inline-block;
    vertical-align: top;
    text-align: center;
    white-space: nowrap;
    transition: all @transitionTime;

    &:hover {
        text-decoration: none;
    }

    &:active,
    &:focus {
        outline: none;
        text-decoration: none;
    }

    &.full-width {
        width: 100%;
    }

    .far,
    .fa,
    .glyphicon,
    .glyphicons {
        font-size: 12px;
        margin-right: 2px;
        vertical-align: baseline;
        display: inline-block;

        &:last-child {
            margin-left: 6px;
            margin-right: 0;
        }

        &:first-child {
            margin-left: 0;
            margin-right: 6px;
        }
    }
}

.button-font(@font-size, @font: @proxima-nova, @font-weight: 400) {
    font-family: @font;
    font-size: @font-size;
    font-weight: @font-weight;
}

.button-size(@height, @padding, @width: auto, @border-size: 1px, @border-radius: 5px) {
    & when (isnumber(@width)) {
        width: @width;
    }
    & when (@width = default) {
        width: 175px;
    }
    & when (@width = auto) {
        width: auto;
    }
    & when (@width = full) {
        width: 100%;
    }
    height: @height;
    line-height: @height - 2 * @border-size;
    padding: @padding;
    border: @border-size solid transparent;
    border-radius: @border-radius;
}

.button-colors(@bg, @color: @white, @bg-hover: lighten(@bg, 10%), @bg-active: lighten(@bg-hover, 10%)) {
    color: @color;
    background-color: @bg;

    &:hover {
        color: @color;
        background-color: @bg-hover;
    }

    &:active {
        background-color: @bg-active;
    }
}

.button-borders(@border-color, @border-color-hover: lighten(@border-color, 10%), @border-color-active: lighten(@border-color-hover, 10%)) {
    border-color: @border-color;

    &:hover {
        border-color: @border-color-hover;
    }

    &:active {
        border-color: @border-color-active;
    }
}

.button-disabled(@color: #9c9c9c, @bg: #eeeeee) {
    &[disabled],
    &.disabled {
        &,
        &:hover,
        &:active,
        &:focus {
            background-color: @bg;
            color: @color;
            cursor: not-allowed;
            border-color: transparent;
        }
    }
}

//button sizes
.button-default(@height: 40px, @width: auto) {
    .button-size(@height, @width, @padding: 0 20px);
    .button-font(16px);
}

.button-small(@height: 35px, @width: auto) {
    .button-size(@height, @width, @padding: 0 20px);
    .button-font(15px);
}

.button-small-in-form(@height: 32px, @width: auto) {
    .button-size(@height, @width, @padding: 0 20px);
    .button-font(15px);
}

.button-xsmall(@height: 26px, @width: auto) {
    .button-size(@height, @width, @padding: 0 12px);
    .button-font(11px);
}

.button-select-size(@size, @width: auto) {
    & when (@size = small) {
        .button-small(@width: @width);
    }
    & when (@size = xsmall) {
        .button-xsmall(@width: @width);
    }
    & when (@size = small-in-form) {
        .button-small-in-form(@width: @width);
    }
    & when (@size = default) {
        .button-default(@width: @width);
    }
}

//button styles
.button-filled(@color: primary, @size: default, @width: auto) {
    & when (true) {
        .button-base();
        .button-select-size(@size, @width);
    }

    & when (@color = primary) {
        .button-colors(@blue, @white, @blueHover);
    }

    & when (@color = secondary) {
        .button-colors(#c4c4c4, @white);
    }

    & when (@color = orange) {
        .button-colors(@orange, @white, @orangeHover);
    }

    & when (@color = green) {
        .button-colors(@green, @white, @greenHover);
    }

    & when (@color = black) {
        .button-colors(@black, @white, #9c9c9c);
    }

    & when (@color = red) {
        .button-colors(@red, @white);
    }
}

.button-outline(@color: primary, @size: default, @width: auto) {
    & when (true) {
        .button-base();
        .button-select-size(@size, @width);
    }

    & when (@color = primary) {
        .button-colors(transparent, @blue, @blueHover);
        .button-borders(@blue, @blueHover);

        &:hover {
            color: @white;
        }
    }

    & when (@color = white) {
        .button-colors(transparent, @white, @blueHover);
        .button-borders(@white, transparent);
    }

    & when (@color = gray) {
        .button-colors(transparent, @black, #f8f8f8);
        .button-borders(#9c9c9c, @blueHover);

        &:hover {
            color: @blueHover;
        }
    }

    & when (@color = black) {
        .button-colors(@white, @black, #f8f8f8);
        .button-borders(#111111, #9c9c9c);
    }

    & when (@color = red) {
        .button-colors(@white, @red, @red);
        .button-borders(@red, @red);

        &:hover,
        &:active {
            color: @white;
        }
    }
}

.button-ghost(@color: primary, @size: default, @width: auto) {
    .button-base();
    .button-select-size(@size, @width);

    & when (@color = primary) {
        .button-colors(@white, @blue, #eef5fd);
    }

    & when (@color = transparent) {
        .button-colors(transparent, @blue, rgba(56, 164, 255, 0.1));
    }
}

.button-link(@color: primary, @size: default) {
    &:hover {
        text-decoration: none;
    }
    & when (@size = default) {
        .button-small(@width: null);
    }

    & when (@size = small) {
        .button-default(@width: null);
    }

    & when (@color = primary) {
        color: @blue;

        &:hover {
            color: @blueHover;
        }
    }

    & when (@color = red) {
        color: @red;
        cursor: pointer;
        pointer-events: none;

        &:hover {
            color: @redHover;
        }
    }

    padding: 0;
}

.button-pro-subscription() {
    &.pro-subscription-button {
        color: @red;
        border: 1px solid @red;
        background-color: #f2f2f2;

        &:focus,
        &:hover {
            background-color: #f2f2f2;
            color: @red;
        }
    }
}

.button-icon(@w, @url) {
    display: inline-block;
    vertical-align: top;
    width: @w;
    height: 100%;
    margin-right: 5px;
    background: url(@url) no-repeat center;
}

.button-dropdown() {
    width: 60px;

    > .glyphicons:last-child {
        margin: 0;
        font-size: 15px;
        vertical-align: middle;
        margin-top: -2px;
    }
}

// button tabs
.button-group() {
    > a {
        .button-base();
        .button-select-size(small);
        .button-colors(@white, @black, #f8f8f8);
        width: auto;
        border-color: #9c9c9c;

        &.selected {
            background: @black;
            color: @white;
            border-color: transparent;
            margin: 0 -1px;
        }

        &:first-child {
            .border-radiuses(@bottomleft: 5px, @topleft: 5px);
        }
        &:last-child {
            .border-radiuses(@bottomright: 5px, @topright: 5px);
        }
    }
}

.pill() {
    height: 25px;
    line-height: 1;
    border-radius: 12.5px;
    background-color: #eeeeee;
    padding: 0 10px 0 14px;
    position: relative;
    max-width: 300px;
    font-family: @proxima-nova;
    font-size: 13px;
    color: @black;
    display: flex;
    align-items: center;

    .close {
        margin-left: 5px;
        font-size: 26px;
        font-weight: normal;
        color: #4a4a4a;
        -webkit-appearance: none;
        padding: 0;
        cursor: pointer;
        background: transparent;
        border: 0;
        opacity: 1;

        &:hover {
            &:before {
                border-color: #d8d8d8;
            }
        }

        &:active,
        &:focus {
            outline: none;
        }

        &:before {
            content: '';
            position: absolute;
            left: 0;
            right: 0;
            top: 0;
            bottom: 0;
            border: 1px solid transparent;
            pointer-events: none;
            transition: border @transitionTime;
            border-radius: 12.5px;
        }
    }
}

.button-dropdown() {
    width: 60px;

    > .glyphicons:last-child {
        margin: 0;
        font-size: 15px;
        vertical-align: middle;
        margin-top: -2px;
    }
}
